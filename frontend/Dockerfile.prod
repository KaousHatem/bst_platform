# FROM node:lts-alpine3.14

# RUN apk update && \
#     apk add --no-cache libc6-compat autoconf automake libtool make tiff jpeg zlib zlib-dev pkgconf nasm file gcc musl-dev
# RUN npm install -g npm


# WORKDIR /usr/src/app/frontend
# COPY package.json .
# RUN npm install
# COPY . .
# RUN npm run build
# EXPOSE 3000
# CMD ["npm","start"]




# FROM node:lts-alpine3.14 AS builder

# WORKDIR /opt/web
# COPY . ./
# RUN npm install

# ENV PATH="./node_modules/.bin:$PATH"

# RUN npm run build

# FROM nginx:1.20.1-alpine
# RUN apk --no-cache add curl
# RUN curl -L https://github.com/a8m/envsubst/releases/download/v1.1.0/envsubst-`uname -s`-`uname -m` -o envsubst && \
#     chmod +x envsubst && \
#     mv envsubst /usr/local/bin
# COPY ./nginx.config /etc/nginx/nginx.template
# CMD ["/bin/sh", "-c", "envsubst < /etc/nginx/nginx.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]
# COPY --from=builder /opt/web/.next /usr/share/nginx/html



FROM node:lts-alpine3.9 AS builder
# Set working directory for react project
WORKDIR /app
COPY ["package.json", "package-lock.json", "./"]
COPY ["public/", "public/"]
COPY ["src/", "src/"]
RUN npm install
RUN npm run build

FROM nginx:1.21.4-alpine
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx/nginx.conf /etc/nginx/conf.d
WORKDIR /usr/share/nginx/html
RUN rm -rf ./*
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
EXPOSE 80
ENTRYPOINT ["nginx", "-g", "daemon off;"]



